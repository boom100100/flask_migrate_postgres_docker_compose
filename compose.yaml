# Run as
# docker-compose build; docker-compose up -d
# Check with
# docker ps
# Then check the logs with
# docker logs --tail 50 $container_id
# docker-compose images
# docker-compose logs --tail 20 repo_name

services:

  postgres_db:
    image: postgres:16.4
    environment:   # Set up postgres database name and password
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_1
      POSTGRES_USER: postgres
    ports:    # Set up ports exposed for other containers to connect to
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    # in the container, check the status:
    # su postgres
    # pg_ctl status

  backend:
    build:
      context: flask
      target: builder
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    environment:
      FLASK_SERVER_PORT: 9091
      DB_URI: postgresql://postgres:postgres@postgres_db/db_1
    volumes:
      - ./flask:/src
      # expected directory structure: flask/app/app.py
    depends_on:
      postgres_db:
        condition: service_healthy
        restart: true

  web:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/tmp/nginx.conf
    environment: 
      - FLASK_SERVER_ADDR=backend:9091  
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
    ports:
      - 80:80
    depends_on:
      - backend
